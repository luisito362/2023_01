import random as r

class Contrasena():
    #ATRIBUTOS PRIVADOS INICIALIZADOS POR DEFECTO
    __longitud = 8
    __contrasena = []
    __contMayuscula = 0
    __contMinuscula = 0
    __contNumero = 0

    #REALIZAMOS EL CONSTRUCTOR QUE RECIBE COMO PARAMETRO LA LONGITUD
    def __init__(self, longitud):
        self.__longitud = longitud
        self.__contrasena = self.generarContrasena()
        self.__contMayuscula
        self.__contMinuscula
        self.__contNumero

    #METODOS GET
    def getLongitud(self):
        return self.__longitud
    def getContrasena(self):
        return self.__contrasena

    #METODO SET
    def setLongitud(self, longitud):
        self.__longitud = longitud

    #METODO O FUNCION PARA GENERAR CONTRASEÃ‘A
    def generarContrasena(self):
        contrasena = []

        for i in range(self.__longitud):
            caracterRandom = r.randint(0,2)

            if caracterRandom == 0:
                self.__contMayuscula += 1
                #AGREGAMOS MAYUSCULAS DEL CODIGO ASCII
                contrasena.append(chr(r.randint(65, 90)))

            elif caracterRandom == 1:
                self.__contMinuscula += 1
                #AGREGAMOS MINUSCULAS DEL CODIGO ASCII
                contrasena.append(chr(r.randint(97, 122)))

            elif caracterRandom == 2:
                self.__contNumero += 1
                #AGREGAMOS NUMEROS DEL CODIGO ASCII
                contrasena.append(chr(r.randint(48, 57)))

        return contrasena

    #METODO O FUNCION PARA SABER SI ES SEGURO
    def esSeguro(self):
        if self.__contMayuscula > 2 and self.__contMinuscula > 1 and self.__contNumero > 5:
            return True
        else:
            return False

    #METODO O FUNCION PARA MOSTRAR DATOS
    def mostrarDatos(self):
        print(f"Longitud: {self.__longitud}")
        print(f"Contrasena: {self.__contrasena}")
        print(f"Cont Mayuscula: {self.__contMayuscula}")
        print(f"Cont Minuscula: {self.__contMinuscula}")
        print(f"Cont Numero: {self.__contNumero}")

